{"ast":null,"code":"var _jsxFileName = \"/home/gates/Projects/Car-main/src/Wallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wallet = () => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [recipient, setRecipient] = useState('');\n  const [transactionStatus, setTransactionStatus] = useState('');\n  const handleSendCoins = () => {\n    // Perform logic to send bitcoins by making a request to your Rails backend\n    axios.post('http://localhost:3000/api/bitcoin/send_coins', {\n      amount,\n      recipient\n    }).then(response => {\n      // Handle the response from the backend\n      setTransactionStatus(response.data.message);\n    }).catch(error => {\n      // Handle errors\n      console.error('Error sending bitcoins:', error);\n      setTransactionStatus('Transaction failed. Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount (BTC):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Recipient's Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: recipient,\n          onChange: e => setRecipient(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSendCoins,\n        children: \"Send Bitcoins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), transactionStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transactionStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Wallet, \"Wf6DYIfB/+IDEGaffRgyCuFeox4=\");\n_c = Wallet;\nexport default Wallet;\nvar _c;\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Wallet","_s","amount","setAmount","recipient","setRecipient","transactionStatus","setTransactionStatus","handleSendCoins","post","then","response","data","message","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["/home/gates/Projects/Car-main/src/Wallet.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';  // Import axios for making HTTP requests\r\n\r\nconst Wallet = () => {\r\n  const [amount, setAmount] = useState('');\r\n  const [recipient, setRecipient] = useState('');\r\n  const [transactionStatus, setTransactionStatus] = useState('');\r\n\r\n  const handleSendCoins = () => {\r\n    // Perform logic to send bitcoins by making a request to your Rails backend\r\n    axios.post('http://localhost:3000/api/bitcoin/send_coins', {\r\n      amount,\r\n      recipient,\r\n    })\r\n      .then(response => {\r\n        // Handle the response from the backend\r\n        setTransactionStatus(response.data.message);\r\n      })\r\n      .catch(error => {\r\n        // Handle errors\r\n        console.error('Error sending bitcoins:', error);\r\n        setTransactionStatus('Transaction failed. Please try again.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bitcoin Wallet</h1>\r\n      <form>\r\n        <label>\r\n          Amount (BTC):\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Recipient's Username:\r\n          <input\r\n            type=\"text\"\r\n            value={recipient}\r\n            onChange={(e) => setRecipient(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"button\" onClick={handleSendCoins}>\r\n          Send Bitcoins\r\n        </button>\r\n      </form>\r\n      {transactionStatus && <p>{transactionStatus}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wallet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}